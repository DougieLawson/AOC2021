 day#4£2: proc options(main) reorder;                                   00010002
                                                                        00020002
   dcl rec_len fixed bin(15) init(0);                                   00030002
   dcl card_num fixed bin(15) init(0);                                  00040002
   dcl row_num fixed bin(15);                                           00050002
   dcl col_num fixed bin(15);                                           00060002
   dcl call_num fixed bin(15);                                          00070002
   dcl 1 bingo_card dim(105),                                           00080002
         5 bingo_row dim(5),                                            00090002
           10 bingo_col pic 'S99' dim(5) init(-2);                      00100002
   dcl spaces_rec char(400) init((400)' ');                             00110002
   dcl bingo_rec char(400);                                             00120002
   dcl called_rec char(400);                                            00130002
   dcl called_num dim(105) pic 'S99' init(-9);                          00140002
   dcl aocin file record input environment(recsize(400));               00150002
   dcl end_file bit init('1'B);                                         00160002
   dcl 1 aocin_rec,                                                     00170002
         5 in_rec char(400);                                            00180002
   dcl card_total fixed bin(31) init(0);                                00190002
                                                                        00200002
   on endfile(aocin) end_file = '0'B;                                   00210002
                                                                        00220002
   open file(aocin);                                                    00230002
   read file(aocin) into(aocin_rec);                                    00240002
   call firstre;                                                        00250002
   do while (end_file);                                                 00260002
     in_rec = spaces_rec;                                               00270002
     read file(aocin) into(aocin_rec);                                  00280002
     if end_file then do;                                               00290002
       call parser;                                                     00300002
     end;                                                               00310002
   end;                                                                 00320002
   close file(aocin);                                                   00330002
                                                                        00340002
   loop: do call_num = 1 by 1 until(call_num = 100);                    00350002
     do card_num = 1 by 1 until(card_num = 100);                        00370002
       do row_num = 1 by 1 until(row_num = 5);                          00390002
         do col_num = 1 by 1 until(col_num = 5);                        00400002
           if                                                           00410002
           bingo_card(card_num).bingo_row(row_num).bingo_col(col_num) = 00420002
           called_num(call_num) then                                    00430002
           bingo_card(card_num).bingo_row(row_num).bingo_col(col_num) = 00440002
           -1;                                                          00450002
           if /* check for a bingo row */                               00460002
            (bingo_card(card_num).bingo_row(row_num).bingo_col(1) = -1 &00470002
            bingo_card(card_num).bingo_row(row_num).bingo_col(2) = -1 & 00480002
            bingo_card(card_num).bingo_row(row_num).bingo_col(3) = -1 & 00490002
            bingo_card(card_num).bingo_row(row_num).bingo_col(4) = -1 & 00500002
            bingo_card(card_num).bingo_row(row_num).bingo_col(5) = -1) |00510002
            /* or column 1 */                                           00520002
            (bingo_card(card_num).bingo_row(1).bingo_col(1) = -1 &      00530002
            bingo_card(card_num).bingo_row(2).bingo_col(1) = -1 &       00540002
            bingo_card(card_num).bingo_row(3).bingo_col(1) = -1 &       00550002
            bingo_card(card_num).bingo_row(4).bingo_col(1) = -1 &       00560002
            bingo_card(card_num).bingo_row(5).bingo_col(1) = -1) |      00570002
            /* or column 2 */                                           00580002
            (bingo_card(card_num).bingo_row(1).bingo_col(2) = -1 &      00590002
            bingo_card(card_num).bingo_row(2).bingo_col(2) = -1 &       00600002
            bingo_card(card_num).bingo_row(3).bingo_col(2) = -1 &       00610002
            bingo_card(card_num).bingo_row(4).bingo_col(2) = -1 &       00620002
            bingo_card(card_num).bingo_row(5).bingo_col(2) = -1) |      00630002
            /* or column 3 */                                           00640002
            (bingo_card(card_num).bingo_row(1).bingo_col(3) = -1 &      00650002
            bingo_card(card_num).bingo_row(2).bingo_col(3) = -1 &       00660002
            bingo_card(card_num).bingo_row(3).bingo_col(3) = -1 &       00670002
            bingo_card(card_num).bingo_row(4).bingo_col(3) = -1 &       00680002
            bingo_card(card_num).bingo_row(5).bingo_col(3) = -1) |      00690002
            /* or column 4 */                                           00700002
            (bingo_card(card_num).bingo_row(1).bingo_col(4) = -1 &      00710002
            bingo_card(card_num).bingo_row(2).bingo_col(4) = -1 &       00720002
            bingo_card(card_num).bingo_row(3).bingo_col(4) = -1 &       00730002
            bingo_card(card_num).bingo_row(4).bingo_col(4) = -1 &       00740002
            bingo_card(card_num).bingo_row(5).bingo_col(4) = -1) |      00750002
            /* or column 5 */                                           00760002
            (bingo_card(card_num).bingo_row(1).bingo_col(5) = -1 &      00770002
            bingo_card(card_num).bingo_row(2).bingo_col(5) = -1 &       00780002
            bingo_card(card_num).bingo_row(3).bingo_col(5) = -1 &       00790002
            bingo_card(card_num).bingo_row(4).bingo_col(5) = -1 &       00800002
            bingo_card(card_num).bingo_row(5).bingo_col(5) = -1)        00810002
             then /* We got one! */ do;                                 00820002
              call we_got_one;                                          00830002
           end;                                                         00840002
         end /* col_num */;                                             00850002
       end /* row_num */;                                               00860002
     end /* card_num */;                                                00870002
   end /* call_num */;                                                  00880002
                                                                        00890002
 we_got_one: proc;                                                      00900002
  card_total = 0;                                                       00910002
  do row_idx = 1 by 1 until(row_idx = 5);                               00920002
   do col_idx = 1 by 1 until(col_idx = 5);                              00930002
     if bingo_card(card_num).bingo_row(row_idx).bingo_col(col_idx) > 0  00940002
     then card_total = card_total +                                     00950002
      bingo_card(card_num).bingo_row(row_idx).bingo_col(col_idx);       00960002
     /* skip this card next time */                                     00970002
     bingo_card(card_num).bingo_row(row_idx).bingo_col(col_idx) = -3;   00980002
   end;                                                                 00990002
   put skip edit('Card #: ', card_num, 'Card total: ', card_total,      01000002
                 ' Called: ',called_num(call_num), ' Total: ',          01010002
                 card_total * called_num(call_num))                     01020002
                (a(8), f(3), a(12), f(10),                              01030002
                 a(9), f(10), a(8),                                     01040002
                 f(10));                                                01050002
 end we_got_one;                                                        01060002
                                                                        01070002
 firstre: proc;                                                         01080002
   dcl position fixed bin(15);                                          01090002
   dcl temp_str char(3) init('   ');                                    01100002
   call findlen;                                                        01110002
   called_rec = substr(in_rec, 1, rec_len);                             01120002
   do call_num = 1 by 1 until (call_num > 99);                          01130002
     position = index(called_rec, ',');                                 01140002
     temp_str = '+' || left(called_rec, position -1);                   01150002
     if index(temp_str, ' ') = 0 then                                   01160002
      called_num(call_num) = '+' ||left(called_rec, position -1);       01170002
     else                                                               01180002
     called_num(call_num) = '+0' || left(called_rec, position -1);      01190002
                                                                        01200002
     called_rec = substr(called_rec, position +1);                      01210002
   end;                                                                 01220002
                                                                        01230002
   /* NOTE:                                          */                 01240002
   /* -----                                          */                 01250002
   /* This will blow up if the last num is one digit */                 01260002
                                                                        01270002
   called_num(call_num) = '+' || left(called_rec, 2);                   01280002
 end firstre;                                                           01290002
                                                                        01300002
 parser: proc;                                                          01310002
   call findlen;                                                        01320002
   bingo_rec = substr(in_rec, 1, rec_len);                              01330002
   if rec_len = 0 then do;                                              01340002
     card_num = card_num +1;                                            01350002
     row_num = 0;                                                       01360002
   end;                                                                 01380002
   else do;                                                             01390002
     row_num = row_num +1;                                              01400002
     if index(substr(bingo_rec, 1, 2), ' ') = 0 then                    01410002
     bingo_card(card_num).bingo_row(row_num).bingo_col(1) =             01420002
     '+' || substr(bingo_rec, 1, 2);                                    01430002
     else                                                               01440002
      bingo_card(card_num).bingo_row(row_num).bingo_col(1) =            01450002
      '+0' || substr(bingo_rec, 2, 1);                                  01460002
                                                                        01470002
     if index(substr(bingo_rec, 4, 2), ' ') = 0 then                    01480002
       bingo_card(card_num).bingo_row(row_num).bingo_col(2) =           01490002
     '+' || substr(bingo_rec, 4, 2);                                    01500002
     else                                                               01510002
      bingo_card(card_num).bingo_row(row_num).bingo_col(2) =            01520002
      '0' || substr(bingo_rec, 5, 1);                                   01530002
                                                                        01540002
     if index(substr(bingo_rec, 7, 2), ' ') = 0 then                    01550002
       bingo_card(card_num).bingo_row(row_num).bingo_col(3) =           01560002
     '+' || substr(bingo_rec, 7, 2);                                    01570002
     else                                                               01580002
      bingo_card(card_num).bingo_row(row_num).bingo_col(3) =            01590002
      '+0' || substr(bingo_rec, 8, 1);                                  01600002
                                                                        01610002
     if index(substr(bingo_rec, 10, 2), ' ') = 0 then                   01620002
      bingo_card(card_num).bingo_row(row_num).bingo_col(4) =            01630002
     '+' || substr(bingo_rec, 10, 2);                                   01640002
     else                                                               01650002
      bingo_card(card_num).bingo_row(row_num).bingo_col(4) =            01660002
      '+0' || substr(bingo_rec, 11, 1);                                 01670002
                                                                        01680002
     if index(substr(bingo_rec, 13, 2), ' ') = 0 then                   01690002
      bingo_card(card_num).bingo_row(row_num).bingo_col(5) =            01700002
     '+' || substr(bingo_rec, 13, 2);                                   01710002
     else                                                               01720002
      bingo_card(card_num).bingo_row(row_num).bingo_col(5) =            01730002
      '+0' || substr(bingo_rec, 14, 1);                                 01740002
                                                                        01750002
   end;                                                                 01760002
 end parser;                                                            01770002
                                                                        01780002
 findlen: proc;                                                         01790002
   dcl curchar char(1);                                                 01800002
   do rec_len = 400 to 1 by -1;                                         01810002
     curchar = substr(in_rec, rec_len, 1);                              01820002
     if index(curchar, '0') > 0 |                                       01830002
        index(curchar, '1') > 0 |                                       01840002
        index(curchar, '2') > 0 |                                       01850002
        index(curchar, '3') > 0 |                                       01860002
        index(curchar, '4') > 0 |                                       01870002
        index(curchar, '5') > 0 |                                       01880002
        index(curchar, '6') > 0 |                                       01890002
        index(curchar, '7') > 0 |                                       01900002
        index(curchar, '8') > 0 |                                       01910002
        index(curchar, '9') > 0 then leave;                             01920002
   end;                                                                 01930002
 end findlen;                                                           01940002
                                                                        01950002
 end day#4£2;                                                           01960002
